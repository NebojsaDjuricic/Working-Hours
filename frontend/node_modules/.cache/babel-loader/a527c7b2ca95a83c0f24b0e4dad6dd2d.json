{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\git\\\\Working-hoursProj\\\\frontend\\\\src\\\\views\\\\Projects.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactBsTable, BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport DefaultCustomInsertModalHeaderTable from '../components/TabelaModal'; // var products = [{\n//       id: 1,\n//       name: \"Product1\",\n//       price: 120\n//   }, {\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },\n//   {\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },\n//   {\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },\n//   {\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },\n//   {\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },{\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },{\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },{\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },{\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   },{\n//       id: 2,\n//       name: \"Product2\",\n//       price: 80\n//   }\n// ];\n\nvar products = [];\n\nfunction addProducts(quantity) {\n  var startId = products.length;\n\n  for (var i = 0; i < quantity; i++) {\n    var id = startId + i;\n    products.push({\n      id: id,\n      name: 'Item name ' + id,\n      price: 2100 + i\n    });\n  }\n}\n\naddProducts(5);\n\nvar CustomInsertModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInsertModal, _React$Component);\n\n  function CustomInsertModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomInsertModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomInsertModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSaveBtnClick = function () {\n      var _this$props = _this.props,\n          columns = _this$props.columns,\n          onSave = _this$props.onSave;\n      var newRow = {};\n      columns.forEach(function (column, i) {\n        newRow[column.field] = _this.refs[column.field].value;\n      }, _assertThisInitialized(_assertThisInitialized(_this))); // You should call onSave function and give the new row\n\n      onSave(newRow);\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomInsertModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          onModalClose = _this$props2.onModalClose,\n          onSave = _this$props2.onSave,\n          columns = _this$props2.columns,\n          validateState = _this$props2.validateState,\n          ignoreEditable = _this$props2.ignoreEditable;\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#eeeeee'\n        },\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Custom Insert Modal\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, columns.map(function (column, i) {\n        var editable = column.editable,\n            format = column.format,\n            field = column.field,\n            name = column.name,\n            hiddenOnInsert = column.hiddenOnInsert;\n\n        if (hiddenOnInsert) {\n          // when you want same auto generate value\n          // and not allow edit, for example ID field\n          return null;\n        }\n\n        var error = validateState[field] ? React.createElement(\"span\", {\n          className: \"help-block bg-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, validateState[field]) : null;\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          key: field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, name, \" : \"), React.createElement(\"input\", {\n          ref: field,\n          type: \"text\",\n          defaultValue: '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), error);\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: onModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Leave\"), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.handleSaveBtnClick(columns, onSave);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Confirm\")));\n    }\n  }]);\n\n  return CustomInsertModal;\n}(React.Component);\n\nvar Projects =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Projects, _Component);\n\n  function Projects() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, Projects);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(Projects)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {};\n\n    _this3.createCustomModal = function (onModalClose, onSave, columns, validateState, ignoreEditable) {\n      var attr = {\n        onModalClose: onModalClose,\n        onSave: onSave,\n        columns: columns,\n        validateState: validateState,\n        ignoreEditable: ignoreEditable\n      };\n      return React.createElement(CustomInsertModal, Object.assign({}, attr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    };\n\n    return _this3;\n  }\n\n  _createClass(Projects, [{\n    key: \"render\",\n    value: function render() {\n      var options = {\n        insertModal: this.createCustomModal\n      };\n      return React.createElement(\"div\", {\n        className: \"divProj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"divUpProj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"titleProj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Projects overview\"))), React.createElement(\"div\", {\n        id: \"divDownProj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"projTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: products,\n        options: options,\n        insertRow: true,\n        style: \"overflow-y:scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Product ID\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Product Price\")), \"// \", React.createElement(BootstrapTable, {\n        data: products,\n        style: \"overflow-y:scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"//   \", React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Product ID\"), \"//   \", React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Product Name\"), \"//   \", React.createElement(TableHeaderColumn, {\n        dataField: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Product Price\"), \"// \"))));\n    }\n  }]);\n\n  return Projects;\n}(Component);\n\nexport { Projects as default };","map":{"version":3,"sources":["C:\\Users\\Korisnik\\git\\Working-hoursProj\\frontend\\src\\views\\Projects.js"],"names":["React","Component","ReactDOM","ReactBsTable","BootstrapTable","TableHeaderColumn","DefaultCustomInsertModalHeaderTable","products","addProducts","quantity","startId","length","i","id","push","name","price","CustomInsertModal","handleSaveBtnClick","props","columns","onSave","newRow","forEach","column","field","refs","value","onModalClose","validateState","ignoreEditable","backgroundColor","color","map","editable","format","hiddenOnInsert","error","Projects","state","createCustomModal","attr","options","insertModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ReactBsTable, BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport DefaultCustomInsertModalHeaderTable from '../components/TabelaModal';\r\n\r\n// var products = [{\r\n//       id: 1,\r\n//       name: \"Product1\",\r\n//       price: 120\r\n//   }, {\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },\r\n//   {\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },\r\n//   {\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },\r\n//   {\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },\r\n//   {\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },{\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },{\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },{\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },{\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   },{\r\n//       id: 2,\r\n//       name: \"Product2\",\r\n//       price: 80\r\n//   }\r\n// ];\r\n\r\n\r\n\r\nconst products = [];\r\n\r\nfunction addProducts(quantity) {\r\n  const startId = products.length;\r\n  for (let i = 0; i < quantity; i++) {\r\n    const id = startId + i;\r\n    products.push({\r\n      id: id,\r\n      name: 'Item name ' + id,\r\n      price: 2100 + i\r\n    });\r\n  }\r\n}\r\n\r\naddProducts(5);\r\n\r\n\r\nclass CustomInsertModal extends React.Component {\r\n\r\n  handleSaveBtnClick = () => {\r\n    const { columns, onSave } = this.props;\r\n    const newRow = {};\r\n    columns.forEach((column, i) => {\r\n      newRow[column.field] = this.refs[column.field].value;\r\n    }, this);\r\n    // You should call onSave function and give the new row\r\n    onSave(newRow);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onModalClose,\r\n      onSave,\r\n      columns,\r\n      validateState,\r\n      ignoreEditable\r\n    } = this.props;\r\n    return (\r\n      <div style={ { backgroundColor: '#eeeeee' } } className='modal-content'>\r\n        <h2 style={ { color: 'red' } }>Custom Insert Modal</h2>\r\n        <div>\r\n          {\r\n            columns.map((column, i) => {\r\n              const {\r\n                editable,\r\n                format,\r\n                field,\r\n                name,\r\n                hiddenOnInsert\r\n              } = column;\r\n\r\n              if (hiddenOnInsert) {\r\n                // when you want same auto generate value\r\n                // and not allow edit, for example ID field\r\n                return null;\r\n              }\r\n              const error = validateState[field] ?\r\n                (<span className='help-block bg-danger'>{ validateState[field] }</span>) :\r\n                null;\r\n              return (\r\n                <div className='form-group' key={ field }>\r\n                  <label>{ name } : </label>\r\n                  <input ref={ field } type='text' defaultValue={ '' } />\r\n                  { error }\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div>\r\n          <button className='btn btn-danger' onClick={ onModalClose }>Leave</button>\r\n          <button className='btn btn-success' onClick={ () => this.handleSaveBtnClick(columns, onSave) }>Confirm</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default class Projects extends Component {\r\n  state = {\r\n  }\r\n\r\n  createCustomModal = (onModalClose, onSave, columns, validateState, ignoreEditable) => {\r\n    const attr = {\r\n      onModalClose, onSave, columns, validateState, ignoreEditable\r\n    };\r\n    return (\r\n      <CustomInsertModal { ... attr } />\r\n    );\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n     const options = {\r\n     insertModal: this.createCustomModal\r\n  };\r\n\r\n      return (\r\n        <div className=\"divProj\">\r\n\r\n          <div id=\"divUpProj\">\r\n            <div id=\"titleProj\">\r\n               <h1>Projects overview</h1>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"divDownProj\">\r\n            <div id=\"projTable\">\r\n            <BootstrapTable data={ products } options={ options } insertRow style=\"overflow-y:scroll\">\r\n              <TableHeaderColumn dataField='id' isKey={ true }>Product ID</TableHeaderColumn>\r\n              <TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>\r\n              <TableHeaderColumn dataField='price'>Product Price</TableHeaderColumn>\r\n            </BootstrapTable>\r\n\r\n               // <BootstrapTable data={ products } style=\"overflow-y:scroll\">\r\n               //   <TableHeaderColumn dataField='id' isKey>Product ID</TableHeaderColumn>\r\n               //   <TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>\r\n               //   <TableHeaderColumn dataField='price'>Product Price</TableHeaderColumn>\r\n               // </BootstrapTable>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n   }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}